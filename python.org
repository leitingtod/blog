* python xrang, range的区别
  用法完全相同，但返回的对象不同，xrange返回一个生成器，而range返回一个列表
* 两个字典如何相加
  a = { 'a': 'a' }
  b = { 'b': 'b' }

  a.update(b)
* 类方
  class MyClass:
      def __init__(self):
      构造方法，一个实例创建后会立即调用此函数

      def instance_method(self):
      实例公开方法

      def __method(self):
      实例私用方法

      @staticmethod
      def static_mothod():

      @classmethod
      def class_mothod(classA):

      可以通过类或类实例调用，并将该class对象（不是class的实例对象）隐式地 当作
      第一个参数传入。不能用实例调用。
* 协程、线程、进程
  协程是编译器级的，线程、进程是操作系统级的。

  协程是编译器的魔术，通过插入相关的代码使代码能够实现分段式的的执行，重新开始的
  地方是通过 yield 指定。


  进程有自己独立的堆和栈，即不共享堆，也不共享栈，由OS调度。

  线程有自己独立的栈和共享堆，由OS调度。

  协程与线程一个共享堆，不共享栈，由程序员在代码里调度。

  协程避免了无意义的调度，由此可提高性能，但需程序员承担调度的责任。同时，也失去
  了线程使用多CPU的能力。
