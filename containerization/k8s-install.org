* 集群组件
- kubernets 1.8.4
- docker-ce latest release
- etcd latest
- netowrk
  - fanneld
  - carlio
- security
  - TLS
  - RBAC
  - kubelet TLS Bootstrapping
- plugins
  - kubedns
  - kube-dashborad
  - heapster(influxdb, grafana)
  - EFK(es, fluentd, kibana)
- private docker-registry
  - harbor
* 集群环境
  机器配置：
  - Ubuntu 16.04
  - 2GB+ RAM
  - 2Core+ CPUS on the master
  - 所有机器之间网络互通
  - 每台机器的 MAC， hostname, product_uuid 惟一
  - 开放集群需要的所有端口
  - 关闭的SWAP

    Kubernetes 1.8开始要求关闭系统的Swap，如果不关闭，默认配置下kubelet将无法启
    动。可以通过kubelet的启动参数–fail-swap-on=false更改这个限制。

  机器列表：
  |              ip | hostname  | product_uuid | MAC |
  |-----------------+-----------+--------------+-----|
  | 192.168.122.196 | master-00 |              |     |
  |  192.168.122.99 | node-00   |              |     |


  本着测试的目的，etcd 集群、kubernetes master 集群、kubernetes node 均使用这三
  台机器。
* 前期准备 [3/3]
   1. [X] 检查并修改 MAC, hostname, product_uuid，确保惟一性
      1. [X] hostname
         1. [X] /etc/hostname
         2. [X] /etc/hosts
      2. [X] MAC
         1. [X] ip link or ifconfig -a
      3. [X] product_uuid
         1. [X] sudo cat /sys/class/dmi/id/product_uuid
   2. [X] 关闭 SWAP
      1. [X] cat /proc/swaps
      2. [X] sudo swapoff -a
      3. [X] /etc/fstab
      4. [X] swappiness参数调整，修改/etc/sysctl.d/k8s.conf添加下面一行：
         vm.swappiness=0
      5. [X] 执行sysctl -p /etc/sysctl.d/k8s.conf使修改生效

   3. [X] 检查端口是否开放(为简单起见，关闭 ufw, selinux)
      1. [X] sudo systemctl stop&&disable ufw.service
      2. [X] 创建/etc/sysctl.d/k8s.conf文件，添加如下内容)：
         net.bridge.bridge-nf-call-ip6tables = 1
         net.bridge.bridge-nf-call-iptables = 1
      3. [X] 执行sysctl -p /etc/sysctl.d/k8s.conf使修改生效
         1. [X]  Ubuntu16.04上 提示无此文件夹
      4. [X] 禁用SELINUX (Ubuntu 16.04 无此功能)
         1. [X] setenforce 0
            1. [X] Ubuntu16.04上 无此命令
         2. [X] vi /etc/selinux/config
            SELINUX=disabled
            1. [X] Ubuntu16.04上 无此文件

* 安装 Docker
  1. [X] 更改APT源
  2. [X] 安装 docker-ce latest
     #begin_src bash
     add aliyun apt
     deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu artful stable edge
     # or
     apt-get update
     apt-get install -y \
     apt-transport-https \
     ca-certificates \
     curl \
     software-properties-common
     curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
     add-apt-repository \
     "deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo "$ID") \
     $(lsb_release -cs) \
     stable"
     apt-get update && apt-get install -y docker-ce=$(apt-cache madison docker-ce | grep 17.09 | head -1 | awk '{print $3}')
     #end_src

* 安装 kubeadm, kubectl, kubelet
  1. [X] 添加源, 在VM中，无法使用代理，放弃，在本机下下载 deb
     - # virt-manager: src=localhost/dir, target=/home/anyuan/share
     - # mkdir /tmp/host_files
     - # mount -t 9p -o trans=virtio,version=9p2000.L /home/anyuan/share /tmp/host_files

  2. [X] Docker从1.13版本开始调整了默认的防火墙规则，禁用了iptables filter表中
     FOWARD链，这样会引起Kubernetes集群中跨Node的Pod无法通信，在各个Docker节点执
     行下面的命令：iptables -P FORWARD ACCEPT

     可在docker的systemd unit文件(/lib/systemd/system/docker.service)中以ExecStartPost加入上面的命令：

     ExecStartPost=/usr/sbin/iptables -P FORWARD ACCEPT
     systemctl daemon-reload
     systemctl restart docker
  3. ENV
     export KUBE_REPO_PREFIX="192.168.0.247:80/library"
     export KUBE_ETCD_IMAGE="192.168.0.247:80/library/etcd-amd64:3.0.17"

  4. kubeadm init --token=abcdef.1234567890abcdef --pod-network-cidr=10.244.0.0/16 --kubernetes-version=v1.8.4 --apiserver-advertise-address=192.168.122.196
     - vim /etc/systemd/system/kubelet.service.d/10-kubeadm.conf

       为kubelet添加一个额外的参数 // 这样kubelet就不会在启动pod的时候去墙外的k8s仓库拉取pause-amd64:3.0镜像了
       --pod-infra-container-image=docker.cinyi.com:443/senyint/pause-amd64:3.0

       Environment="KUBELET_INFRA_IMAGE=--pod-infra-container-image=docker.cinyi.com:443/senyint/pause-amd64:3.0"

     - [preflight] Some fatal errors occurred: Port 10250 is in use

       kubeadm会自动检查当前环境是否有上次命令执行的“残留”。如果有，必须清理后再
       行执行init。我们可以通过”kubeadm reset”来清理环境，以备重来。

* Addons
** StorageOS
   docker run -d --name storageos -e storageos-01 -e ADVERTISE_IP=192.168.0.181 -e JOIN=192.168.0.181,192.168.0.182,192.168.0.183 --net=host --pid=host --privileged --cap-add SYS_ADMIN --device /dev/fuse -v /var/lib/storageos:/var/lib/storageos:rshared -v /run/docker/plugins:/run/docker/plugins storageos/node:0.9.0 server
** Helm
   operate from bastion-client by docker
   mount program to anyuan home

** Harbor
   Refs:
   - https://github.com/vmware/harbor

*** [[https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/][k8s 访问 Harbor]]
    kubectl create secret docker-registry harbor-registry-secret --docker-server=dockerhub.aysaas.com --docker-username=liuyazhou --docker-password=leiting88Q --docker-email=test@test.com

* Apps
** qycloud
