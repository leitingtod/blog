* 数据结构在数据库中的应用 
** 树与数据库索引
*** 二叉查找树
    二叉查找树（也叫排序树或搜索树）有特殊属性的树，每个结点的关键字：
    1. 比保存在左子树的任务键值要大
    2. 比保存在右子树的任务键值要小

    其时间复杂度为O(log(N))
*** B+树
    二叉查找树用于查找一个特定的值挺好用，但若要查找两个值之间的多个元
    素，就会有大麻烦了。时间复杂度将变为O(N)，因为必须查找每一个结点，
    决断它是否在指定的范围内。

    为了解决这个问题，产生了B+树：
    1. 只有最底层的结点才保存信息（相关表的行位置）
    2. 其它结点只是在搜索时用来指引到正确的节点

    举例来说，要找40到100间的值：
    1. 先找到40，若不存在，则找离40最近的值
    2. 收集找到结点的后续连接，直到找到100

    其时间复杂度为O(M+log(N))

    但在数据库增加或删除一行时:
    1. 必须在B+树中的节点间保持顺序
    2. 必须尽可能降低树的层数

    即B+树需要自我整理和自我平衡。
*** 哈希表
    其时间复杂度是O(1)，一个哈希表可以只装载部分，剩下的可以留在硬盘上。
   
   

      
